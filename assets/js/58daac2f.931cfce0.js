"use strict";(self.webpackChunkvtl_documentation=self.webpackChunkvtl_documentation||[]).push([[384],{7602:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={id:"index-string-concatenation",title:"String concatenation",sidebar_label:"String concatenation",slug:"/reference-manual/string-operators/string-concatenation",custom_edit_url:null},l=void 0,p={unversionedId:"reference-manual/string-operators/index-string-concatenation",id:"reference-manual/string-operators/index-string-concatenation",title:"String concatenation",description:"Behaviour",source:"@site/docs/reference-manual/string-operators/index-string-concatenation.mdx",sourceDirName:"reference-manual/string-operators",slug:"/reference-manual/string-operators/string-concatenation",permalink:"/VTL-Docs/reference-manual/string-operators/string-concatenation",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1695876799,formattedLastUpdatedAt:"Sep 28, 2023",frontMatter:{id:"index-string-concatenation",title:"String concatenation",sidebar_label:"String concatenation",slug:"/reference-manual/string-operators/string-concatenation",custom_edit_url:null},sidebar:"docs",previous:{title:"Overview",permalink:"/VTL-Docs/reference-manual/string-operators"},next:{title:"Overview",permalink:"/VTL-Docs/ebnf"}},o={},c=[{value:"Behaviour",id:"behaviour",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Input parameters type",id:"input-parameters-type",level:2},{value:"Result type",id:"result-type",level:2},{value:"Examples",id:"examples",level:2},{value:"Results",id:"results",level:2}],d={toc:c};function s(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"behaviour"},"Behaviour"),(0,r.kt)("p",null,"The operator has the behaviour of the \u201cOperators applicable on two Scalar Values or Data Sets or Data Set Components\u201d (see the section \u201cTypical behaviours of the ML Operators\u201d)."),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"op1 || op2")),(0,r.kt)("h2",{id:"input-parameters-type"},"Input parameters type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"op1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"op2"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"component<string>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"dataset { measure<string> _+ }")),(0,r.kt)("h2",{id:"result-type"},"Result type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"result"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"component<string>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"dataset { measure<string> _+ }")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'str := "Hello" || " " || "world";\nds_comp_concat := ds1[calc concat := str1 || " " || str2];\nds_concat := ds2#str1[rename str1 to concat] || " " || ds1#str2[rename str2 to concat];\n')),(0,r.kt)("h2",{id:"results"},"Results"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ds1")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"id"),(0,r.kt)("th",{parentName:"tr",align:"center"},"str1"),(0,r.kt)("th",{parentName:"tr",align:"center"},"str2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"a"),(0,r.kt)("td",{parentName:"tr",align:"center"},"toto")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"b"),(0,r.kt)("td",{parentName:"tr",align:"center"},"titi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"c"),(0,r.kt)("td",{parentName:"tr",align:"center"},"tata")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ds2")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"id"),(0,r.kt)("th",{parentName:"tr",align:"center"},"str1"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hello")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hey")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ds_comp_concat")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"id"),(0,r.kt)("th",{parentName:"tr",align:"center"},"str1"),(0,r.kt)("th",{parentName:"tr",align:"center"},"str2"),(0,r.kt)("th",{parentName:"tr",align:"center"},"concat"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"a"),(0,r.kt)("td",{parentName:"tr",align:"center"},"toto"),(0,r.kt)("td",{parentName:"tr",align:"center"},"a toto")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"b"),(0,r.kt)("td",{parentName:"tr",align:"center"},"titi"),(0,r.kt)("td",{parentName:"tr",align:"center"},"b titi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"c"),(0,r.kt)("td",{parentName:"tr",align:"center"},"tata"),(0,r.kt)("td",{parentName:"tr",align:"center"},"c tata")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ds_concat")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"id"),(0,r.kt)("th",{parentName:"tr",align:"center"},"concat"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hello toto")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hi titi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Hey tata")))))}s.isMDXComponent=!0}}]);